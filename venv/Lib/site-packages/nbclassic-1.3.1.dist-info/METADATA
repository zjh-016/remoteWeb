Metadata-Version: 2.4
Name: nbclassic
Version: 1.3.1
Summary: Jupyter Notebook as a Jupyter Server extension.
Project-URL: Homepage, https://github.com/jupyter/nbclassic
Author-email: Jupyter Development Team <jupyter@googlegroups.com>
License: BSD 3-Clause License
        
        Copyright (c) 2020 Project Jupyter Contributors
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
License-File: LICENSE
Keywords: interactive,interpreter,ipython,jupyter,shell,web
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.9
Requires-Dist: ipykernel
Requires-Dist: ipython-genutils
Requires-Dist: nest-asyncio>=1.5
Requires-Dist: notebook-shim>=0.2.3
Provides-Extra: dev
Requires-Dist: hatch; extra == 'dev'
Requires-Dist: pre-commit; extra == 'dev'
Provides-Extra: docs
Requires-Dist: myst-parser; extra == 'docs'
Requires-Dist: nbsphinx; extra == 'docs'
Requires-Dist: sphinx; extra == 'docs'
Requires-Dist: sphinx-rtd-theme; extra == 'docs'
Requires-Dist: sphinxcontrib-github-alt; extra == 'docs'
Provides-Extra: json-logging
Requires-Dist: json-logging; extra == 'json-logging'
Provides-Extra: test
Requires-Dist: coverage; extra == 'test'
Requires-Dist: nbval; extra == 'test'
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: pytest-jupyter; extra == 'test'
Requires-Dist: pytest-playwright; extra == 'test'
Requires-Dist: pytest-tornasync; extra == 'test'
Requires-Dist: requests; extra == 'test'
Requires-Dist: requests-unixsocket; (sys_platform != 'win32') and extra == 'test'
Requires-Dist: testpath; extra == 'test'
Description-Content-Type: text/markdown

# The Classic Jupyter Notebook as a Jupyter Server Extension

![Testing nbclassic](https://github.com/jupyterlab/nbclassic/workflows/Testing%20nbclassic/badge.svg)
[![Documentation Status](https://readthedocs.org/projects/nbclassic/badge/?version=latest)](https://nbclassic.readthedocs.io/en/latest/?badge=latest)

*Read the full [NbClassic User Manual here]!*

The Jupyter Notebook is [evolving to bring you big new features], but it
will also break backwards compatibility with many classic Jupyter Notebook
extensions and customizations.

NbClassic provides a backwards compatible Jupyter Notebook interface that
you can [install side-by-side] with the latest versions: That way, you can
fearlessly upgrade without worrying about your classic extensions and
customizations breaking.

## How does it work?

Because NbClassic provides the classic interface on top of the new [Jupyter
Server] backend, it can coexist with other frontends like JupyterLab and
Notebook 7 in the same installation. NbClassic preserves the custom classic
notebook experience under a new set of URL endpoints, under the namespace
`/nbclassic/`.

## Basic Usage

Install from PyPI:

```
> pip install nbclassic
```

This will automatically enable the NbClassic Jupyter Server extension in Jupyter Server.

Launch directly:

```
> jupyter nbclassic
```

Alternatively, you can run Jupyter Server:

```
> jupyter server
```

[Jupyter Server]: https://github.com/jupyter/jupyter_server/
[evolving to bring you big new features]: https://jupyter-notebook.readthedocs.io/en/latest/migrate_to_notebook7.html
[NbClassic User Manual here]: https://nbclassic.readthedocs.io/en/latest/
[install side-by-side]: https://jupyter-notebook.readthedocs.io/en/latest/migrating/multiple-interfaces.html
